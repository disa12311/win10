services:
  windows:
    image: dockurr/windows:latest
    container_name: windows
    # giữ restart và grace period của bạn
    restart: always
    stop_grace_period: 2m

    # preserve network admin capability (tun) cho VPN/bridge nếu cần
    cap_add:
      - NET_ADMIN

    # thiết bị cần cho KVM + tun; thêm GPU passthrough tùy chọn ở dưới
    devices:
      - "/dev/kvm:/dev/kvm"
      - "/dev/net/tun:/dev/net/tun"
      # optional GPU (if you want passthrough) — uncomment and adjust on hosts that support it
      # - "/dev/dri/card0:/dev/dri/card0"
      # - "/dev/dri/renderD128:/dev/dri/renderD128"

    ports:
      - "8006:8006"        # noVNC / web viewer (installation / console)
      - "3389:3389/tcp"    # RDP (TCP only)
      # optional: expose spice / other ports if you add them
      # - "5900:5900/tcp"

    environment:
      # phiên bản & cấu hình Windows
      VERSION: "10"                    # 10, 11, win81, xp, server2019, ...
      EDITION: "pro"                   # pro/enterprise/education
      LANGUAGE: "en-US"                # ví dụ en-US, vi-VN, de-DE
      LOCALE: "en-US"
      EULA: "accept"                   # phải chấp nhận eula nếu image yêu cầu
      # user mặc định được tạo trong windows
      USERNAME: ${WINDOWS_USERNAME}
      PASSWORD: ${WINDOWS_PASSWORD}

      # tài nguyên VM (tùy host)
      RAM_SIZE: "4.5G"                   # ex: "8G", "16G"
      CPU_CORES: "4"                   # ex: "2", "8"
      DISK_SIZE: "64G"                 # ex: "256G"
      VIRTIO_DRIVERS: "auto"           # auto | custom path

      # mạng / time zone / extras
      TIMEZONE: "Asia/Bangkok"
      TZ: "Asia/Bangkok"

      # chia sẻ thư mục host -> Windows (bạn vẫn phải mount volume bên dưới)
      SHARED_FOLDERS: "/mnt/windows-data:/host"  # optional mapping dạng host:guest

      # cập nhật / debug
      AUTO_UPDATE: "true"              # nếu image hỗ trợ script update
      DEBUG: "false"

      # security / access
      RDP_PASSWORD: ${WINDOWS_PASSWORD} # nếu image dùng biến này để set RDP pass
      # tùy theo image, có thể cần thêm biến: USER_UID / USER_GID, SYSTEM_USER, etc.

    volumes:
      # nơi lưu QCOW2/ổ đĩa ảo: CRITICALLY persist VM state here
      - /tmp/docker-data:/mnt/disco1       # path bạn chọn (host bind)
      - windows-data:/mnt/windows-data     # named volume để backup / di chuyển
      - ./win-iso-cache:/iso-cache         # (tùy) cache ISO để tránh tải lại
      - ./virtio-drivers:/virtio           # (tùy) nếu bạn muốn mount driver virtio
      # mount docker socket nếu bạn muốn cho container khởi tạo nested containers (cẩn trọng)
      # - /var/run/docker.sock:/var/run/docker.sock:ro

    # tài nguyên và giới hạn để tránh chiếm toàn bộ host
    deploy:
      resources:
        limits:
          memory: 12G
          cpus: '6.0'

    # ulimits để QEMU chạy ổn định
    ulimits:
      nofile: 65536

    # logging: quay vòng file logs để tránh đầy disk
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

    # healthcheck: thử truy cập web console (yêu cầu container có curl)
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8006/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

    # security notes: run as privileged only if bạn hiểu rủi ro; KVM thường cần devices + cap_add (không cần privileged)
    # privileged: false

    # optional: dùng host network nếu bạn muốn RDP nghe trực tiếp (thận trọng)
    # network_mode: "bridge"

    # optional entrypoint/command overrides (thường không cần)
    # command: ["--some-flag"]

    # labels: metadata, monitoring
    labels:
      - "org.opencontainers.image.title=dockurr-windows"
      - "com.example.project=windows-lab"

volumes:
  windows-data:
    driver: local
